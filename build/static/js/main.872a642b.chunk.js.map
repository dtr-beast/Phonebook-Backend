{"version":3,"sources":["Components/Filter.tsx","Components/PersonForm.tsx","Components/Person.tsx","Components/Persons.tsx","services/phonebook.ts","App.tsx","index.tsx"],"names":["Filter","value","onChange","type","PersonForm","onSubmit","onNameChange","nameValue","onNumberChange","numValue","Person","name","number","onDelete","onClick","Persons","persons","map","person","id","URL","phonebookService","getAll","axios","get","then","r","data","createPerson","newPerson","post","deletePerson","delete","updatePerson","put","App","useState","setPersons","useEffect","setVisiblePersons","visiblePersons","newName","setNewName","newNumber","setNewNumber","search","setSearch","ev","target","searchVal","toLowerCase","filter","includes","preventDefault","resultPerson","find","window","confirm","updatedPerson","console","log","newPersonList","push","alert","returnedPerson","concat","valueOf","res","statusText","status","newPersons","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.872a642b.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ninterface Props {\r\n    value: string;\r\n    onChange: (ev: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nfunction Filter({value, onChange}: Props) {\r\n    return <p>Filter Shown with <input type=\"text\" value={value} onChange={onChange}/></p>;\r\n}\r\n\r\nexport default Filter","import React from \"react\";\r\n\r\ninterface Props {\r\n    onSubmit: (ev: React.FormEvent<HTMLFormElement>) => void;\r\n    onNameChange: (ev: React.ChangeEvent<HTMLInputElement>) => void;\r\n    nameValue: string;\r\n    numValue: string;\r\n    onNumberChange: (ev: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nfunction PersonForm({onSubmit, onNameChange, nameValue, onNumberChange, numValue}: Props) {\r\n    return <form onSubmit={onSubmit}>\r\n        <div>\r\n            <div>\r\n                Name: <input onChange={onNameChange} value={nameValue}/>\r\n            </div>\r\n            <div>\r\n                Number: <input onChange={onNumberChange} value={numValue}/>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\">Add</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nexport default PersonForm","import React from \"react\";\r\n\r\n\r\ninterface Props {\r\n    name: string,\r\n    number: string,\r\n    onDelete: (e: React.MouseEvent<HTMLButtonElement>) => void\r\n}\r\n\r\nfunction Person({name, number, onDelete}: Props) {\r\n    return (\r\n        <>\r\n            <p>\r\n                {name}: {number} <button onClick={onDelete}>Delete</button>\r\n            </p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Person","import React from \"react\";\r\nimport Person from \"./Person\";\r\nimport {PersonParam} from \"../App\";\r\n\r\n\r\ninterface Props {\r\n    persons: PersonParam[]\r\n    onClick: (id: string, name: string, number: string) => void\r\n}\r\n\r\nfunction Persons({persons, onClick}: Props) {\r\n    return (\r\n        <>\r\n            {\r\n                persons.map(person =>\r\n                    <Person key={person.id}\r\n                            name={person.name} number={person.number}\r\n                            onDelete={() => {\r\n                                onClick(person.id, person.name, person.number)\r\n                            }}\r\n                    />)\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Persons","import axios from \"axios\";\r\n\r\nconst URL = '/api/persons'\r\n\r\nfunction getAll() {\r\n    return axios\r\n        .get(`${URL}`)\r\n        .then(r => r.data)\r\n}\r\n\r\nfunction createPerson(newPerson: {name: string, number: string}) {\r\n    return axios\r\n        .post(URL, newPerson)\r\n        .then(r => r.data)\r\n}\r\n\r\nfunction updatePerson(newPerson: {id: string}) {\r\n    return axios\r\n        .put(`${URL}/${newPerson.id}`, newPerson)\r\n        .then(r => r.data)\r\n}\r\n\r\nfunction deletePerson(id: string) {\r\n    return axios\r\n        .delete(`${URL}/${id}`)\r\n}\r\n\r\nconst phonebookService = {getAll, createPerson, deletePerson, updatePerson}\r\n\r\nexport default phonebookService\r\n","import React, {useEffect, useState} from 'react'\nimport Filter from \"./Components/Filter\";\nimport PersonForm from \"./Components/PersonForm\";\nimport Persons from \"./Components/Persons\";\nimport phonebookService from \"./services/phonebook\";\n\n\nfunction App() {\n    const [persons, setPersons] = useState<PersonParam[]>([])\n\n    // TODO: Make a useEffect() for visiblePersons too\n    useEffect(() => {\n        phonebookService.getAll().then(\n            r => {\n                setPersons(r)\n                setVisiblePersons(r)\n            }\n        )\n    }, [])\n\n\n    const [visiblePersons, setVisiblePersons] = useState(persons)\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [search, setSearch] = useState('')\n\n    function handleNewName(ev: React.ChangeEvent<HTMLInputElement>) {\n        setNewName(ev.target.value)\n    }\n\n    function handleNewNumber(ev: React.ChangeEvent<HTMLInputElement>) {\n        setNewNumber(ev.target.value)\n    }\n\n    function handleSearch(ev: React.ChangeEvent<HTMLInputElement>) {\n        setSearch(ev.target.value)\n        const searchVal = ev.target.value.toLowerCase()\n        setVisiblePersons(() => {\n            return persons.filter((value => value.name.toLowerCase().includes(searchVal)))\n        })\n    }\n\n    function addNewName(ev: React.FormEvent<HTMLFormElement>) {\n        ev.preventDefault()\n        const newPerson = {name: newName, number: newNumber}\n        // TODO: Find a more performant and better method\n        const resultPerson = persons.find(value => value.name === newPerson.name)\n        if (resultPerson) {\n            const confirmed = window.confirm(`${newName} is already added to phonebook, replace the old number with new one?`)\n            if (confirmed) {\n                phonebookService\n                    .updatePerson({...newPerson, id: resultPerson.id})\n                    .then(updatedPerson => {\n                        console.log(updatedPerson)\n\n                        const newPersonList = persons.filter((person) => person.id !== resultPerson.id)\n\n                        newPersonList.push(updatedPerson)\n                        setPersons(newPersonList)\n                        setVisiblePersons(newPersonList)\n                        alert(`Phonebook entry: ${newName} Successfully Updated!`)\n                    })\n            } else {\n                alert(`Request Cancelled!`)\n            }\n        } else {\n            phonebookService\n                .createPerson(newPerson)\n                .then(returnedPerson => {\n                    // @ts-ignore\n                    const newPersonList = persons.concat(returnedPerson)\n                    setPersons(newPersonList)\n                    setVisiblePersons(newPersonList)\n                })\n        }\n        setNewName('')\n        setNewNumber('')\n    }\n\n    // TODO: Improve\n    function deleteName(id: string, name: string, number: string) {\n        const confirmed = window.confirm(`Delete ${name} (${number})?`).valueOf()\n        if (confirmed) {\n            phonebookService\n                .deletePerson(id)\n                .then((res) => {\n                    console.log(res.statusText)\n                    if (res.status === 204) {\n                        // TODO: Fix this, find a better way to delete\n                        const newPersons = persons.filter((person) => person.id !== id)\n                        console.log(newPersons)\n                        setPersons(newPersons)\n                        // TODO: Also, set this according to the search query as well\n                        setVisiblePersons(newPersons)\n                    }\n                })\n        } else {\n            alert(`Delete Request Cancelled`)\n        }\n    }\n    return (\n        <>\n            <h2>Phonebook</h2>\n            <Filter value={search} onChange={handleSearch}/>\n\n            <h2>Add New </h2>\n            <PersonForm onSubmit={addNewName} onNameChange={handleNewName} nameValue={newName}\n                        onNumberChange={handleNewNumber} numValue={newNumber}/>\n\n            <h2>Numbers</h2>\n            <Persons persons={visiblePersons} onClick={deleteName}/>\n        </>\n    )\n}\n\n\nexport default App\n\nexport interface PersonParam {\n    id: string;\n    name: string,\n    number: string,\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}