{"version":3,"sources":["Components/Filter.tsx","Components/PersonForm.tsx","Components/Person.tsx","Components/Persons.tsx","services/phonebook.ts","App.tsx","index.tsx"],"names":["Filter","value","onChange","type","PersonForm","onSubmit","onNameChange","nameValue","onNumberChange","numValue","Person","name","number","onDelete","onClick","Persons","persons","map","person","id","URL","exportFunctions","getAll","axios","get","then","r","data","createPerson","newPerson","post","deletePerson","delete","App","useState","setPersons","useEffect","phonebookService","setVisiblePersons","visiblePersons","newName","setNewName","newNumber","setNewNumber","search","setSearch","ev","searchVal","target","toLowerCase","filter","includes","preventDefault","findIndex","window","confirm","returnedPerson","newPersonList","concat","valueOf","newPersons","console","log","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63ef37cf.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\ninterface Props {\r\n    value: string;\r\n    onChange: (ev: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nfunction Filter({value, onChange}: Props) {\r\n    return <p>Filter Shown with <input type=\"text\" value={value} onChange={onChange}/></p>;\r\n}\r\n\r\nexport default Filter","import React from \"react\";\r\n\r\ninterface Props {\r\n    onSubmit: (ev: React.FormEvent<HTMLFormElement>) => void;\r\n    onNameChange: (ev: React.ChangeEvent<HTMLInputElement>) => void;\r\n    nameValue: string;\r\n    numValue: string;\r\n    onNumberChange: (ev: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nfunction PersonForm({onSubmit, onNameChange, nameValue, onNumberChange, numValue}: Props) {\r\n    return <form onSubmit={onSubmit}>\r\n        <div>\r\n            <div>\r\n                Name: <input onChange={onNameChange} value={nameValue}/>\r\n            </div>\r\n            <div>\r\n                Number: <input onChange={onNumberChange} value={numValue}/>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <button type=\"submit\">Add</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nexport default PersonForm","import React from \"react\";\r\n\r\n\r\ninterface Props {\r\n    name: string,\r\n    number: string,\r\n    onDelete: (e: React.MouseEvent<HTMLButtonElement>) => void\r\n}\r\n\r\nfunction Person({name, number, onDelete}: Props) {\r\n    return (\r\n        <>\r\n            <p>{name}: {number}\r\n                <button onClick={onDelete}>Delete</button>\r\n            </p>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Person","import React from \"react\";\r\nimport Person from \"./Person\";\r\nimport {PersonParam} from \"../App\";\r\n\r\n\r\ninterface Props {\r\n    persons: PersonParam[]\r\n    onClick: (id: number)  => void\r\n}\r\n\r\nfunction Persons({persons, onClick}: Props) {\r\n    return (\r\n        <>\r\n            {persons.map(person =>\r\n                <Person key={person.id}\r\n                        name={person.name} number={person.number}\r\n                        onDelete={() => {\r\n                            onClick(person.id)\r\n                        }}/>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Persons","import axios from \"axios\";\r\n\r\n// https://dry-bastion-66622.herokuapp.com/\r\nconst URL = '/api/persons'\r\n\r\nfunction getAll() {\r\n    return axios\r\n        .get<PersonServer>(`${URL}`)\r\n        .then(r => r.data)\r\n}\r\n\r\nfunction createPerson(newPerson: PersonServer) {\r\n    return axios\r\n        .post<PersonServer>(URL, newPerson)\r\n        .then(r => r.data)\r\n}\r\n\r\nfunction deletePerson(id: number) {\r\n    return axios\r\n        .delete<PersonServer>(`${URL}/${id}`)\r\n}\r\n\r\nconst exportFunctions = {getAll, createPerson, deletePerson}\r\n\r\nexport default exportFunctions\r\n\r\nexport interface PersonServer {\r\n    name: string,\r\n    number: string\r\n}","import React, {useEffect, useState} from 'react'\nimport Filter from \"./Components/Filter\";\nimport PersonForm from \"./Components/PersonForm\";\nimport Persons from \"./Components/Persons\";\nimport phonebookService from \"./services/phonebook\";\n\n\nfunction App() {\n    const [persons, setPersons] = useState<PersonParam[]>([])\n\n    useEffect(() => {\n        phonebookService.getAll().then(\n            r => {\n                // @ts-ignore\n                setPersons(r)\n                // @ts-ignore\n                setVisiblePersons(r)\n            }\n        )\n    }, [])\n\n\n    const [visiblePersons, setVisiblePersons] = useState(persons)\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [search, setSearch] = useState('')\n\n    function handleNewName(ev: React.ChangeEvent<HTMLInputElement>) {\n        setNewName(ev.target.value)\n    }\n\n    function handleNewNumber(ev: React.ChangeEvent<HTMLInputElement>) {\n        setNewNumber(ev.target.value)\n    }\n\n    function handleSearch(ev: React.ChangeEvent<HTMLInputElement>) {\n        const searchVal = ev.target.value.toLowerCase()\n        setSearch(searchVal)\n        setVisiblePersons(() => {\n            return persons.filter((value => value.name.toLowerCase().includes(searchVal)))\n        })\n    }\n\n    function addNewName(ev: React.FormEvent<HTMLFormElement>) {\n        ev.preventDefault()\n        const newPerson = {name: newName, number: newNumber}\n        // TODO: Find a more performant and better method\n        if (persons.findIndex(value => value.name === newPerson.name) !== -1) {\n            const confirmed = window.confirm(`${newName} is already added to phonebook, replace the old number with new one?`)\n            if (confirmed) {\n                phonebookService\n                    .createPerson(newPerson)\n                    .then(returnedPerson => {\n                        // @ts-ignore\n                        const newPersonList = persons.concat(returnedPerson)\n                        setPersons(newPersonList)\n                        setVisiblePersons(newPersonList)\n                    })\n            }\n        } else {\n            phonebookService\n                .createPerson(newPerson)\n                .then(returnedPerson => {\n                    // @ts-ignore\n                    const newPersonList = persons.concat(returnedPerson)\n                    setPersons(newPersonList)\n                    setVisiblePersons(newPersonList)\n                })\n        }\n        setNewName('')\n        setNewNumber('')\n    }\n\n    // TODO: Improve\n    function deleteName(id: number) {\n        const confirmed = window.confirm(`Delete ${persons[id - 1].name} ?`).valueOf()\n        if (confirmed) {\n            phonebookService\n                .deletePerson(id)\n                .then(() => {\n                    // TODO: Fix this, find a better way to delete\n                    const newPersons = persons.filter((person) => person.id !== id)\n                    console.log(newPersons)\n                    setPersons(newPersons)\n                    // TODO: Also, set this according to the search query as well\n                    setVisiblePersons(newPersons)\n                })\n\n        } else {\n            alert(`Delete Request Cancelled`)\n        }\n    }\n\n    // @ts-ignore\n    return (\n        <>\n            <h2>Phonebook</h2>\n            <Filter value={search} onChange={handleSearch}/>\n\n            <h2>Add New </h2>\n            <PersonForm onSubmit={addNewName} onNameChange={handleNewName} nameValue={newName}\n                        onNumberChange={handleNewNumber} numValue={newNumber}/>\n\n            <h2>Numbers</h2>\n            <Persons persons={visiblePersons} onClick={deleteName}/>\n        </>\n    )\n}\n\n\nexport default App\n\nexport interface PersonParam {\n    id: number;\n    name: string,\n    number: string,\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}